Description: "Template for deploying the Fargate resources."

Parameters:
  AppPort:
    Description: "Port exposed by the container."
    Default: 9292
    Type: Number

  Image:
    Description: "Default docker image."
    Default: "324320755747.dkr.ecr.us-east-1.amazonaws.com/anthony-mini-project:latest"
    Type: String

  SubnetId1:
    Description: "Default subnet 1"
    Type: String
    Default: subnet-0265a4fe3f9a4a89f

  SubnetId2:
    Description: "Default subnet 2"
    Type: String
    Default: subnet-0bc34574b93d7220f

  VpcId:
    Description: "Default VpcId"
    Type: String
    Default: vpc-001084ff8ad166449

Resources:
  Cluster:
    Type: AWS::ECS::Cluster

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow traffic to container port"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref AppPort
          ToPort: !Ref AppPort
          SourceSecurityGroupId: !ImportValue anthony-groupid
      VpcId: !Ref VpcId

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: "anthony-mini-project"
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 60
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: "anthony-mini-project"
          ContainerPort: !Ref AppPort
          TargetGroupArn: !ImportValue anthony-mini-project-target-group-arn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetId1
            - !Ref SubnetId2
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: anthonyMiniProjectServiceRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "256"
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      Memory: "512"
      RequiresCompatibilities:
        - "FARGATE"
      ContainerDefinitions:
        - Name: "anthony-mini-project"
          Image: !Ref Image
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"
          HealthCheck:
            Command:
              - "CMD-SHELL"
              - "curl -f http://localhost:9292/health || exit 1"
            Interval: 30
            Retries: 3
            Timeout: 5
          PortMappings:
            - ContainerPort: !Ref AppPort
              Protocol: tcp
      NetworkMode: awsvpc

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: Fargateproject

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: AnthonyMiniProjectTaskRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecr:*
                  - ecs:List*
                  - logs:*
                Resource: "*"

