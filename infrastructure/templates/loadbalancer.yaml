Description: "Template for deploying the load balancer."

Parameters:
  SubnetId1:
    Description: "Default subnet 1"
    Type: String
    Default: subnet-0265a4fe3f9a4a89f

  SubnetId2:
    Description: "Default subnet 2"
    Type: String
    Default: subnet-0bc34574b93d7220f

  VpcId:
    Description: "Default VpcId"
    Type: String
    Default: vpc-001084ff8ad166449

  CertArn:
    Description: "Default certification arn"
    Type: String
    Default: arn:aws:acm:us-east-1:324320755747:certificate/f0cb5933-f42d-4b73-a971-b74ad8b86da3

Resources:
  HttpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow inbound traffic (HTTP & HTTPS) from the internet"
      GroupName: anthony-mini-project-security-group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: "Inbound HTTP traffic from internet"
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: "Inbound HTTPS traffic from internet"
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: !Ref VpcId
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: anthony-loadbalancer
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt HttpSecurityGroup.GroupId
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
      Type: application
  
  RedirectListener: # Port 80 -> 443
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: "HTTPS"
            Port: "443"
            Host: "#{host}"
            Path: "/#{path}"
            StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ListenerCertificate:
    Type: AWS::ElasticLoadBalancingV2::ListenerCertificate
    Properties: 
      Certificates: 
        - CertificateArn: !Ref CertArn
      ListenerArn: !Ref Listener

  Listener: # Port 443 W/ SSL
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: "ELBSecurityPolicy-2016-08"
      Certificates:
        - CertificateArn: !Ref CertArn

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 9292
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId

  DNSRecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: Z3809G91N7QZJE
        Name: anthony.elasticoperations.com
        ResourceRecords:
          - !GetAtt LoadBalancer.DNSName
        Type: CNAME
        TTL: 300

Outputs:
  LoadbalancerUrl:
    Description: "Load balancer url"
    Value: !GetAtt LoadBalancer.DNSName
  TargetGroupArn:
    Description: "Arn of the target group"
    Value: !Ref TargetGroup
    Export:
      Name: "anthony-mini-project-target-group-arn"
  HttpSecurityGroup:
    Description: "ID of HttpSecuritGroup"
    Value: !Ref HttpSecurityGroup
    Export:
      Name: "anthony-groupid"
